Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод
Вывод	стандартный вывод
Чтобы успокоить нервы, я до вечера рассчитывал элементы орбиты говяжьего филе, а также возмущения, вызванные движением потерянного ключа. У меня получилось, что в течение ближайших шести миллионов лет говядина будет догонять ключ, обращаясь вокруг ракеты по круговой орбите, а потом обгонит его.

С миллионами лет обращаться трудновато, поэтому обойдемся несколькими днями.
Напишите программу, рассчитывающую очередные сближения говяжьего филе и потерянного гаечного ключа, но только, если это не вторник.

Формат ввода
Вводятся два числа через пробел – периоды обращения говядины и ключа в днях.
Затем вводится дата их общего старта.
Затем вводится количество дат, которые надо найти.

Формат вывода
Выведите заданное количество ближайших дат, не считая введенную, в которые оба тела будут одновременно находиться в точке старта. Если дата попадает на вторник, ее не выводить.
Формат вывода дат: DD Month YY

Пример 1
Ввод	Вывод
2 3
25/03/2022
5
31 March 22
06 April 22
18 April 22
24 April 22
30 April 22
Пример 2
Ввод	Вывод
4 6
1/04/2022
3
13 April 22
25 April 22
07 May 22
Примечания
0 – понедельник

from datetime import date, timedelta

t = [int(x) for x in input().split()]
a, b = timedelta(days=t[0]), timedelta(days=t[1])
c = [int(x) for x in input().split('/')]
datea = date(c[2], c[1], c[0])
dateb = datea
k = int(input())
c = 0
for i in range(1, 100000):
    if i % t[1] == 0 and i % t[0] == 0:
        v = timedelta(days=i)
        break
p = 0
while p < k:
    datea += v
    if datea.weekday() != 1:
        print(datea.strftime('%d %B %y'))
        p += 1
        
